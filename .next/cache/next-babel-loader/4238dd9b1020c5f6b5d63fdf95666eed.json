{"ast":null,"code":"var _jsxFileName = \"/home/ilan/dev/cc-tools/components/Transaction.tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { BigNumber } from \"ethers/utils/bignumber\";\nconst keyType = {\n  hash: \"string\",\n  to: \"string\",\n  from: \"string\",\n  nonce: \"number\",\n  gasLimit: \"BigNumber\",\n  gasPrice: \"BigNumber\",\n  data: \"string\",\n  value: \"BigNumber\",\n  chainId: \"number\",\n  r: \"string\",\n  s: \"string\",\n  v: \"number\"\n};\n\nconst TxInfo = ({\n  t\n}) => __jsx(React.Fragment, null, __jsx(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24\n  },\n  __self: this\n}, Object.keys(t).map((k, i) => __jsx(IfExists, {\n  t: t,\n  k: k,\n  key: i,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26\n  },\n  __self: this\n}))));\n\nconst IfExists = ({\n  t,\n  k\n}) => {\n  if (!t[k]) {\n    return null;\n  }\n\n  let v = t[k];\n\n  if (t[k] instanceof BigNumber) {\n    v = t[k].toString();\n  }\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, k, \": \", v);\n}; // {\"nonce\":3,\"gasPrice\":{\"_hex\":\"0x3b9aca00\"},\"gasLimit\":{\"_hex\":\"0xdb91\"},\"to\":\"0xdAC17F958D2ee523a2206206994597C13D831ec7\",\"value\":{\"_hex\":\"0x00\"},\"data\":\"0xa9059cbb000000000000000000000000954ef2f18ae8426ffb94466b986bfea7069c13410000000000000000000000000000000000000000000000000000000043c73d60\",\"chainId\":0,\"v\":28,\"r\":\"0x35fa020909b4a5e36533e5d1398772631ab83b556f63d2e9a44254f9aca30c00\",\"s\":\"0x3da9b5769419f214ecb7c2027c8233b4294986b48651af1210ab6f7f331cd365\",\"from\":\"0x80c2AE82885A4A61C083c90c53B039fF20e3F013\",\"hash\":\"0x55f956cf92ff9bcfc815ce878bcfbe89d8f62ad411b842b031c9a8021a16b152\"}\n\n\nexport default TxInfo;","map":{"version":3,"sources":["/home/ilan/dev/cc-tools/components/Transaction.tsx"],"names":["React","BigNumber","keyType","hash","to","from","nonce","gasLimit","gasPrice","data","value","chainId","r","s","v","TxInfo","t","Object","keys","map","k","i","IfExists","toString"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,SAAT,QAA0B,wBAA1B;AAEA,MAAMC,OAAO,GAAG;AACZC,EAAAA,IAAI,EAAE,QADM;AAEZC,EAAAA,EAAE,EAAE,QAFQ;AAGZC,EAAAA,IAAI,EAAE,QAHM;AAIZC,EAAAA,KAAK,EAAE,QAJK;AAKZC,EAAAA,QAAQ,EAAE,WALE;AAMZC,EAAAA,QAAQ,EAAE,WANE;AAOZC,EAAAA,IAAI,EAAE,QAPM;AAQZC,EAAAA,KAAK,EAAE,WARK;AASZC,EAAAA,OAAO,EAAE,QATG;AAUZC,EAAAA,CAAC,EAAE,QAVS;AAWZC,EAAAA,CAAC,EAAE,QAXS;AAYZC,EAAAA,CAAC,EAAE;AAZS,CAAhB;;AAeA,MAAMC,MAEJ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KACD,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACKC,MAAM,CAACC,IAAP,CAAYF,CAAZ,EAAeG,GAAf,CAAmB,CAACC,CAAD,EAAIC,CAAJ,KAChB,MAAC,QAAD;AAAU,EAAA,CAAC,EAAEL,CAAb;AAAgB,EAAA,CAAC,EAAEI,CAAnB;AAAsB,EAAA,GAAG,EAAEC,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADH,CADL,CADJ,CAHJ;;AAiBA,MAAMC,QAAiC,GAAG,CAAC;AAAEN,EAAAA,CAAF;AAAKI,EAAAA;AAAL,CAAD,KAAc;AACpD,MAAI,CAACJ,CAAC,CAACI,CAAD,CAAN,EAAW;AACP,WAAO,IAAP;AACH;;AAED,MAAIN,CAAC,GAAGE,CAAC,CAACI,CAAD,CAAT;;AACA,MAAIJ,CAAC,CAACI,CAAD,CAAD,YAAgBnB,SAApB,EAA+B;AAC3Ba,IAAAA,CAAC,GAAGE,CAAC,CAACI,CAAD,CAAD,CAAKG,QAAL,EAAJ;AACH;;AAED,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKH,CADL,QACUN,CADV,CADJ;AAKH,CAfD,C,CAiBA;;;AAEA,eAAeC,MAAf","sourcesContent":["import React from \"react\";\nimport { Transaction, populateTransaction } from \"ethers/utils/transaction\";\nimport { BigNumber } from \"ethers/utils/bignumber\";\n\nconst keyType = {\n    hash: \"string\",\n    to: \"string\",\n    from: \"string\",\n    nonce: \"number\",\n    gasLimit: \"BigNumber\",\n    gasPrice: \"BigNumber\",\n    data: \"string\",\n    value: \"BigNumber\",\n    chainId: \"number\",\n    r: \"string\",\n    s: \"string\",\n    v: \"number\"\n};\n\nconst TxInfo: React.FC<{\n    t: Transaction;\n}> = ({ t }) => (\n    <>\n        <div>\n            {Object.keys(t).map((k, i) => (\n                <IfExists t={t} k={k} key={i} />\n            ))}\n        </div>\n    </>\n);\n\ninterface IfExistsProps {\n    t: Transaction;\n    k: string;\n}\n\nconst IfExists: React.FC<IfExistsProps> = ({ t, k }) => {\n    if (!t[k]) {\n        return null;\n    }\n\n    let v = t[k]\n    if (t[k] instanceof BigNumber) {\n        v = t[k].toString();\n    }\n\n    return (\n        <div>\n            {k}: {v}\n        </div>\n    )\n};\n\n// {\"nonce\":3,\"gasPrice\":{\"_hex\":\"0x3b9aca00\"},\"gasLimit\":{\"_hex\":\"0xdb91\"},\"to\":\"0xdAC17F958D2ee523a2206206994597C13D831ec7\",\"value\":{\"_hex\":\"0x00\"},\"data\":\"0xa9059cbb000000000000000000000000954ef2f18ae8426ffb94466b986bfea7069c13410000000000000000000000000000000000000000000000000000000043c73d60\",\"chainId\":0,\"v\":28,\"r\":\"0x35fa020909b4a5e36533e5d1398772631ab83b556f63d2e9a44254f9aca30c00\",\"s\":\"0x3da9b5769419f214ecb7c2027c8233b4294986b48651af1210ab6f7f331cd365\",\"from\":\"0x80c2AE82885A4A61C083c90c53B039fF20e3F013\",\"hash\":\"0x55f956cf92ff9bcfc815ce878bcfbe89d8f62ad411b842b031c9a8021a16b152\"}\n\nexport default TxInfo;\n"]},"metadata":{},"sourceType":"module"}