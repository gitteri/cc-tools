{"ast":null,"code":"import _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nvar _jsxFileName = \"/home/ilan/dev/cc-tools/components/Transaction.tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { BigNumber } from \"ethers/utils/bignumber\";\nvar keyType = {\n  hash: \"string\",\n  to: \"string\",\n  from: \"string\",\n  nonce: \"number\",\n  gasLimit: \"BigNumber\",\n  gasPrice: \"BigNumber\",\n  data: \"string\",\n  value: \"BigNumber\",\n  chainId: \"number\",\n  r: \"string\",\n  s: \"string\",\n  v: \"number\"\n};\n\nvar TxInfo = function TxInfo(_ref) {\n  var t = _ref.t;\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, _Object$keys(t).map(function (k, i) {\n    return __jsx(IfExists, {\n      t: t,\n      k: k,\n      type: keyType[k],\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    });\n  })));\n};\n\nvar IfExists = function IfExists(_ref2) {\n  var t = _ref2.t,\n      k = _ref2.k,\n      type = _ref2.type;\n\n  if (!t[k]) {\n    return null;\n  }\n\n  var v = t[k];\n\n  if (t[k] instanceof BigNumber) {\n    v = t[k].toString();\n  }\n\n  switch (type) {\n    case \"string\":\n    case \"number\":\n      return __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, k, \": \", t[k]);\n\n    case \"BigNumber\":\n      t[k].toString();\n  }\n}; // {\"nonce\":3,\"gasPrice\":{\"_hex\":\"0x3b9aca00\"},\"gasLimit\":{\"_hex\":\"0xdb91\"},\"to\":\"0xdAC17F958D2ee523a2206206994597C13D831ec7\",\"value\":{\"_hex\":\"0x00\"},\"data\":\"0xa9059cbb000000000000000000000000954ef2f18ae8426ffb94466b986bfea7069c13410000000000000000000000000000000000000000000000000000000043c73d60\",\"chainId\":0,\"v\":28,\"r\":\"0x35fa020909b4a5e36533e5d1398772631ab83b556f63d2e9a44254f9aca30c00\",\"s\":\"0x3da9b5769419f214ecb7c2027c8233b4294986b48651af1210ab6f7f331cd365\",\"from\":\"0x80c2AE82885A4A61C083c90c53B039fF20e3F013\",\"hash\":\"0x55f956cf92ff9bcfc815ce878bcfbe89d8f62ad411b842b031c9a8021a16b152\"}\n\n\nexport default TxInfo;","map":{"version":3,"sources":["/home/ilan/dev/cc-tools/components/Transaction.tsx"],"names":["React","BigNumber","keyType","hash","to","from","nonce","gasLimit","gasPrice","data","value","chainId","r","s","v","TxInfo","t","map","k","i","IfExists","type","toString"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,SAAT,QAA0B,wBAA1B;AAEA,IAAMC,OAAO,GAAG;AACZC,EAAAA,IAAI,EAAE,QADM;AAEZC,EAAAA,EAAE,EAAE,QAFQ;AAGZC,EAAAA,IAAI,EAAE,QAHM;AAIZC,EAAAA,KAAK,EAAE,QAJK;AAKZC,EAAAA,QAAQ,EAAE,WALE;AAMZC,EAAAA,QAAQ,EAAE,WANE;AAOZC,EAAAA,IAAI,EAAE,QAPM;AAQZC,EAAAA,KAAK,EAAE,WARK;AASZC,EAAAA,OAAO,EAAE,QATG;AAUZC,EAAAA,CAAC,EAAE,QAVS;AAWZC,EAAAA,CAAC,EAAE,QAXS;AAYZC,EAAAA,CAAC,EAAE;AAZS,CAAhB;;AAeA,IAAMC,MAEJ,GAAG,SAFCA,MAED;AAAA,MAAGC,CAAH,QAAGA,CAAH;AAAA,SACD,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK,aAAYA,CAAZ,EAAeC,GAAf,CAAmB,UAACC,CAAD,EAAIC,CAAJ;AAAA,WAChB,MAAC,QAAD;AAAU,MAAA,CAAC,EAAEH,CAAb;AAAgB,MAAA,CAAC,EAAEE,CAAnB;AAAsB,MAAA,IAAI,EAAEhB,OAAO,CAACgB,CAAD,CAAnC;AAAwC,MAAA,GAAG,EAAEC,CAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADgB;AAAA,GAAnB,CADL,CADJ,CADC;AAAA,CAFL;;AAkBA,IAAMC,QAAiC,GAAG,SAApCA,QAAoC,QAAoB;AAAA,MAAjBJ,CAAiB,SAAjBA,CAAiB;AAAA,MAAdE,CAAc,SAAdA,CAAc;AAAA,MAAXG,IAAW,SAAXA,IAAW;;AAC1D,MAAI,CAACL,CAAC,CAACE,CAAD,CAAN,EAAW;AACP,WAAO,IAAP;AACH;;AAED,MAAIJ,CAAC,GAAGE,CAAC,CAACE,CAAD,CAAT;;AACA,MAAIF,CAAC,CAACE,CAAD,CAAD,YAAgBjB,SAApB,EAA+B;AAC3Ba,IAAAA,CAAC,GAAGE,CAAC,CAACE,CAAD,CAAD,CAAKI,QAAL,EAAJ;AACH;;AAED,UAAQD,IAAR;AACI,SAAK,QAAL;AACA,SAAK,QAAL;AACI,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKH,CADL,QACUF,CAAC,CAACE,CAAD,CADX,CADJ;;AAKJ,SAAK,WAAL;AACKF,MAAAA,CAAC,CAACE,CAAD,CAAF,CAAoBI,QAApB;AATR;AAWH,CArBD,C,CAuBA;;;AAEA,eAAeP,MAAf","sourcesContent":["import React from \"react\";\nimport { Transaction, populateTransaction } from \"ethers/utils/transaction\";\nimport { BigNumber } from \"ethers/utils/bignumber\";\n\nconst keyType = {\n    hash: \"string\",\n    to: \"string\",\n    from: \"string\",\n    nonce: \"number\",\n    gasLimit: \"BigNumber\",\n    gasPrice: \"BigNumber\",\n    data: \"string\",\n    value: \"BigNumber\",\n    chainId: \"number\",\n    r: \"string\",\n    s: \"string\",\n    v: \"number\"\n};\n\nconst TxInfo: React.FC<{\n    t: Transaction;\n}> = ({ t }) => (\n    <>\n        <div>\n            {Object.keys(t).map((k, i) => (\n                <IfExists t={t} k={k} type={keyType[k]} key={i} />\n            ))}\n        </div>\n    </>\n);\n\ninterface IfExistsProps {\n    t: Transaction;\n    k: string;\n    type: string;\n}\n\nconst IfExists: React.FC<IfExistsProps> = ({ t, k, type }) => {\n    if (!t[k]) {\n        return null;\n    }\n\n    let v = t[k]\n    if (t[k] instanceof BigNumber) {\n        v = t[k].toString();\n    }\n\n    switch (type) {\n        case \"string\":\n        case \"number\":\n            return (\n                <div>\n                    {k}: {t[k]}\n                </div>\n            );\n        case \"BigNumber\":\n            (t[k] as BigNumber).toString()\n    }\n};\n\n// {\"nonce\":3,\"gasPrice\":{\"_hex\":\"0x3b9aca00\"},\"gasLimit\":{\"_hex\":\"0xdb91\"},\"to\":\"0xdAC17F958D2ee523a2206206994597C13D831ec7\",\"value\":{\"_hex\":\"0x00\"},\"data\":\"0xa9059cbb000000000000000000000000954ef2f18ae8426ffb94466b986bfea7069c13410000000000000000000000000000000000000000000000000000000043c73d60\",\"chainId\":0,\"v\":28,\"r\":\"0x35fa020909b4a5e36533e5d1398772631ab83b556f63d2e9a44254f9aca30c00\",\"s\":\"0x3da9b5769419f214ecb7c2027c8233b4294986b48651af1210ab6f7f331cd365\",\"from\":\"0x80c2AE82885A4A61C083c90c53B039fF20e3F013\",\"hash\":\"0x55f956cf92ff9bcfc815ce878bcfbe89d8f62ad411b842b031c9a8021a16b152\"}\n\nexport default TxInfo;\n"]},"metadata":{},"sourceType":"module"}