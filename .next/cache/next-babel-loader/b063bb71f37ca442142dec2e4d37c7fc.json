{"ast":null,"code":"var _jsxFileName = \"/home/ilan/dev/cc-tools/pages/decode/hex/index.tsx\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport { parse } from \"ethers/utils/transaction\";\n\nclass HexDecoder extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"decodeTx\", e => {\n      try {\n        let decodedTx = parse(e.target.value);\n\n        if (decodedTx) {\n          this.setState({\n            decodedTx\n          });\n        }\n\n        console.log(decodedTx);\n      } catch (e) {\n        if (e instanceof Error) {\n          console.log(e.message);\n        } // console.log(e)\n\n      }\n    });\n\n    _defineProperty(this, \"render\", () => __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      \"html-for\": \"decode-tx\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"Enter Raw Hex\"), __jsx(\"textarea\", {\n      className: \"form-control\",\n      id: \"decode-tx\",\n      onChange: this.decodeTx,\n      \"html-rows\": \"4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    })), JSON.stringify(this.state.decodedTx)));\n\n    this.state = {\n      decodeTx: \"\"\n    };\n  }\n\n}\n\nexport default HexDecoder;","map":{"version":3,"sources":["/home/ilan/dev/cc-tools/pages/decode/hex/index.tsx"],"names":["React","parse","HexDecoder","Component","constructor","props","e","decodedTx","target","value","setState","console","log","Error","message","decodeTx","JSON","stringify","state"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,KAAT,QAAmC,0BAAnC;;AAOA,MAAMC,UAAN,SAAyBF,KAAK,CAACG,SAA/B,CAA8D;AAC1DC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,sCAOPC,CAAD,IAAqD;AAC5D,UAAI;AACA,YAAIC,SAAS,GAAGN,KAAK,CAACK,CAAC,CAACE,MAAF,CAASC,KAAV,CAArB;;AACA,YAAIF,SAAJ,EAAe;AACX,eAAKG,QAAL,CAAc;AACVH,YAAAA;AADU,WAAd;AAGH;;AACDI,QAAAA,OAAO,CAACC,GAAR,CAAYL,SAAZ;AACH,OARD,CAQE,OAAOD,CAAP,EAAU;AACR,YAAIA,CAAC,YAAYO,KAAjB,EAAwB;AACpBF,UAAAA,OAAO,CAACC,GAAR,CAAYN,CAAC,CAACQ,OAAd;AACH,SAHO,CAIR;;AACH;AACJ,KAtBkB;;AAAA,oCAwBV,MACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,kBAAS,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,EAEI;AAAU,MAAA,SAAS,EAAC,cAApB;AAAmC,MAAA,EAAE,EAAC,WAAtC;AAAkD,MAAA,QAAQ,EAAE,KAAKC,QAAjE;AAA2E,mBAAU,GAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ,EAKKC,IAAI,CAACC,SAAL,CAAe,KAAKC,KAAL,CAAWX,SAA1B,CALL,CAzBe;;AAEf,SAAKW,KAAL,GAAa;AACTH,MAAAA,QAAQ,EAAE;AADD,KAAb;AAGH;;AANyD;;AAoC9D,eAAeb,UAAf","sourcesContent":["import React from \"react\";\n\nimport { parse, Transaction } from \"ethers/utils/transaction\";\n\ninterface HexDecoderState {\n    decodeTx: string;\n    decodedTx?: Transaction;\n}\n\nclass HexDecoder extends React.Component<{}, HexDecoderState> {\n    constructor(props) {\n        super(props);\n        this.state = {\n            decodeTx: \"\"\n        };\n    }\n\n    decodeTx = (e: React.ChangeEvent<HTMLTextAreaElement>): void => {\n        try {\n            let decodedTx = parse(e.target.value);\n            if (decodedTx) {\n                this.setState({\n                    decodedTx,\n                });\n            }\n            console.log(decodedTx)\n        } catch (e) {\n            if (e instanceof Error) {\n                console.log(e.message);\n            }\n            // console.log(e)\n        }\n    }\n\n    render = () => (\n        <div>\n            <div className=\"form-group\">\n                <label html-for=\"decode-tx\">Enter Raw Hex</label>\n                <textarea className=\"form-control\" id=\"decode-tx\" onChange={this.decodeTx} html-rows=\"4\"></textarea>\n            </div>\n            {JSON.stringify(this.state.decodedTx)}\n        </div>\n    )\n}\n\nexport default HexDecoder;"]},"metadata":{},"sourceType":"module"}