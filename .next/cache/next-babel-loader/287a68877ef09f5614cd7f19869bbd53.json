{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/ilan/dev/cc-tools/pages/decode/hex/index.tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { parse } from \"ethers/utils/transaction\";\n\nvar HexDecoder =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(HexDecoder, _React$Component);\n\n  function HexDecoder(props) {\n    var _this;\n\n    _classCallCheck(this, HexDecoder);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(HexDecoder).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"decodeTx\", function (e) {\n      var decodedTx = parse(e.target.value);\n\n      if (decodedTx) {\n        _this.setState({\n          decodedTx: decodedTx\n        });\n      }\n\n      console.log(decodedTx);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"render\", function () {\n      return __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, __jsx(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, \"Enter String:\"), __jsx(\"textarea\", {\n        onChange: _this.decodeTx,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }), __jsx(\"style\", {\n        tsx: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, \"\\n                input {\\n                    width: 100%;\\n                }\\n            \"), _JSON$stringify(_this.state.decodedTx));\n    });\n\n    _this.state = {\n      decodeTx: \"\"\n    };\n    return _this;\n  }\n\n  return HexDecoder;\n}(React.Component);\n\nexport default HexDecoder;","map":{"version":3,"sources":["/home/ilan/dev/cc-tools/pages/decode/hex/index.tsx"],"names":["React","parse","HexDecoder","props","e","decodedTx","target","value","setState","console","log","decodeTx","state","Component"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,KAAT,QAAmC,0BAAnC;;IAQMC,U;;;;;AACF,sBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,oFAAMA,KAAN;;AADe,+DAOR,UAACC,CAAD,EAAkD;AACzD,UAAIC,SAAS,GAAGJ,KAAK,CAACG,CAAC,CAACE,MAAF,CAASC,KAAV,CAArB;;AACA,UAAIF,SAAJ,EAAe;AACX,cAAKG,QAAL,CAAc;AACVH,UAAAA,SAAS,EAATA;AADU,SAAd;AAGH;;AACDI,MAAAA,OAAO,CAACC,GAAR,CAAYL,SAAZ;AACH,KAfkB;;AAAA,6DAiBV;AAAA,aACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,EAEI;AAAU,QAAA,QAAQ,EAAE,MAAKM,QAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAGI;AAAO,QAAA,GAAG,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wGAHJ,EAQK,gBAAe,MAAKC,KAAL,CAAWP,SAA1B,CARL,CADK;AAAA,KAjBU;;AAEf,UAAKO,KAAL,GAAa;AACTD,MAAAA,QAAQ,EAAE;AADD,KAAb;AAFe;AAKlB;;;EANoBX,KAAK,CAACa,S;;AAgC/B,eAAeX,UAAf","sourcesContent":["import React from \"react\";\n\nimport { parse, Transaction } from \"ethers/utils/transaction\";\nimport { hexDataLength } from \"ethers/utils/bytes\";\n\ninterface HexDecoderState {\n    decodeTx: string;\n    decodedTx?: Transaction;\n}\n\nclass HexDecoder extends React.Component<{}, HexDecoderState> {\n    constructor(props) {\n        super(props);\n        this.state = {\n            decodeTx: \"\"\n        };\n    }\n\n    decodeTx = (e: React.ChangeEvent<HTMLInputElement>): void => {\n        let decodedTx = parse(e.target.value);\n        if (decodedTx) {\n            this.setState({\n                decodedTx,\n            });\n        }\n        console.log(decodedTx)\n    }\n\n    render = () => (\n        <div>\n            <p>Enter String:</p>\n            <textarea onChange={this.decodeTx} />\n            <style tsx>{`\n                input {\n                    width: 100%;\n                }\n            `}</style>\n            {JSON.stringify(this.state.decodedTx)}\n        </div>\n    )\n}\n\nexport default HexDecoder;"]},"metadata":{},"sourceType":"module"}