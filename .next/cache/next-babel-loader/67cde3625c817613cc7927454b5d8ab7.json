{"ast":null,"code":"import _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nvar _jsxFileName = \"/home/ilan/dev/cc-tools/components/Transaction.tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { BigNumber } from \"ethers/utils/bignumber\";\nvar keyType = {\n  hash: \"string\",\n  to: \"string\",\n  from: \"string\",\n  nonce: \"number\",\n  gasLimit: \"BigNumber\",\n  gasPrice: \"BigNumber\",\n  data: \"string\",\n  value: \"BigNumber\",\n  chainId: \"number\",\n  r: \"string\",\n  s: \"string\",\n  v: \"number\"\n};\n\nvar TxInfo = function TxInfo(_ref) {\n  var t = _ref.t;\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, _Object$keys(t).map(function (k, i) {\n    return __jsx(IfExists, {\n      t: t,\n      k: k,\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    });\n  })));\n};\n\nvar IfExists = function IfExists(_ref2) {\n  var t = _ref2.t,\n      k = _ref2.k;\n\n  if (!t[k]) {\n    return null;\n  }\n\n  var v = t[k];\n\n  if (t[k] instanceof BigNumber) {\n    v = t[k].toString();\n  }\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, k, \": \", v);\n};\n\nexport default TxInfo;","map":{"version":3,"sources":["/home/ilan/dev/cc-tools/components/Transaction.tsx"],"names":["React","BigNumber","keyType","hash","to","from","nonce","gasLimit","gasPrice","data","value","chainId","r","s","v","TxInfo","t","map","k","i","IfExists","toString"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,SAAT,QAA0B,wBAA1B;AAEA,IAAMC,OAAO,GAAG;AACZC,EAAAA,IAAI,EAAE,QADM;AAEZC,EAAAA,EAAE,EAAE,QAFQ;AAGZC,EAAAA,IAAI,EAAE,QAHM;AAIZC,EAAAA,KAAK,EAAE,QAJK;AAKZC,EAAAA,QAAQ,EAAE,WALE;AAMZC,EAAAA,QAAQ,EAAE,WANE;AAOZC,EAAAA,IAAI,EAAE,QAPM;AAQZC,EAAAA,KAAK,EAAE,WARK;AASZC,EAAAA,OAAO,EAAE,QATG;AAUZC,EAAAA,CAAC,EAAE,QAVS;AAWZC,EAAAA,CAAC,EAAE,QAXS;AAYZC,EAAAA,CAAC,EAAE;AAZS,CAAhB;;AAeA,IAAMC,MAEJ,GAAG,SAFCA,MAED;AAAA,MAAGC,CAAH,QAAGA,CAAH;AAAA,SACD,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK,aAAYA,CAAZ,EAAeC,GAAf,CAAmB,UAACC,CAAD,EAAIC,CAAJ;AAAA,WAChB,MAAC,QAAD;AAAU,MAAA,CAAC,EAAEH,CAAb;AAAgB,MAAA,CAAC,EAAEE,CAAnB;AAAsB,MAAA,GAAG,EAAEC,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADgB;AAAA,GAAnB,CADL,CADJ,CADC;AAAA,CAFL;;AAiBA,IAAMC,QAAiC,GAAG,SAApCA,QAAoC,QAAc;AAAA,MAAXJ,CAAW,SAAXA,CAAW;AAAA,MAARE,CAAQ,SAARA,CAAQ;;AACpD,MAAI,CAACF,CAAC,CAACE,CAAD,CAAN,EAAW;AACP,WAAO,IAAP;AACH;;AAED,MAAIJ,CAAC,GAAGE,CAAC,CAACE,CAAD,CAAT;;AACA,MAAIF,CAAC,CAACE,CAAD,CAAD,YAAgBjB,SAApB,EAA+B;AAC3Ba,IAAAA,CAAC,GAAGE,CAAC,CAACE,CAAD,CAAD,CAAKG,QAAL,EAAJ;AACH;;AAED,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKH,CADL,QACUJ,CADV,CADJ;AAKH,CAfD;;AAiBA,eAAeC,MAAf","sourcesContent":["import React from \"react\";\nimport { Transaction, populateTransaction } from \"ethers/utils/transaction\";\nimport { BigNumber } from \"ethers/utils/bignumber\";\n\nconst keyType = {\n    hash: \"string\",\n    to: \"string\",\n    from: \"string\",\n    nonce: \"number\",\n    gasLimit: \"BigNumber\",\n    gasPrice: \"BigNumber\",\n    data: \"string\",\n    value: \"BigNumber\",\n    chainId: \"number\",\n    r: \"string\",\n    s: \"string\",\n    v: \"number\"\n};\n\nconst TxInfo: React.FC<{\n    t: Transaction;\n}> = ({ t }) => (\n    <>\n        <div>\n            {Object.keys(t).map((k, i) => (\n                <IfExists t={t} k={k} key={i} />\n            ))}\n        </div>\n    </>\n);\n\ninterface IfExistsProps {\n    t: Transaction;\n    k: string;\n}\n\nconst IfExists: React.FC<IfExistsProps> = ({ t, k }) => {\n    if (!t[k]) {\n        return null;\n    }\n\n    let v = t[k]\n    if (t[k] instanceof BigNumber) {\n        v = t[k].toString();\n    }\n\n    return (\n        <div>\n            {k}: {v}\n        </div>\n    )\n};\n\nexport default TxInfo;\n"]},"metadata":{},"sourceType":"module"}