{"ast":null,"code":"var _jsxFileName = \"/home/ilan/dev/cc-tools/pages/decode/hex/index.tsx\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport * as React from \"react\";\nimport { parse } from \"ethers/utils/transaction\";\n\nclass HexDecoder extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"decodeTx\", e => {\n      let parsedTx = parse(e.target.value);\n\n      if (parsedTx) {\n        this.setState({\n          decodedTx\n        });\n      }\n\n      console.log(parsedTx);\n    });\n\n    _defineProperty(this, \"render\", () => __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"Enter String:\"), __jsx(\"input\", {\n      type: \"text\",\n      onChange: decodeTx,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }), this.state.decodedTx));\n\n    this.state = {\n      decodeTx: \"\"\n    };\n  }\n\n}\n\nexport default HexDecoder;","map":{"version":3,"sources":["/home/ilan/dev/cc-tools/pages/decode/hex/index.tsx"],"names":["React","parse","HexDecoder","Component","constructor","props","e","parsedTx","target","value","setState","decodedTx","console","log","decodeTx","state"],"mappings":";;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,SAASC,KAAT,QAAmC,0BAAnC;;AAQA,MAAMC,UAAN,SAAyBF,KAAK,CAACG,SAA/B,CAA8D;AAC1DC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,sCAOPC,CAAD,IAAkD;AACzD,UAAIC,QAAQ,GAAGN,KAAK,CAACK,CAAC,CAACE,MAAF,CAASC,KAAV,CAApB;;AACA,UAAIF,QAAJ,EAAc;AACV,aAAKG,QAAL,CAAc;AACVC,UAAAA;AADU,SAAd;AAGH;;AACDC,MAAAA,OAAO,CAACC,GAAR,CAAYN,QAAZ;AACH,KAfkB;;AAAA,oCAiBV,MACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,EAEI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,QAAQ,EAAEO,QAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGK,KAAKC,KAAL,CAAWJ,SAHhB,CAlBe;;AAEf,SAAKI,KAAL,GAAa;AACTD,MAAAA,QAAQ,EAAE;AADD,KAAb;AAGH;;AANyD;;AA2B9D,eAAeZ,UAAf","sourcesContent":["import * as React from \"react\";\n\nimport { parse, Transaction } from \"ethers/utils/transaction\";\nimport { hexDataLength } from \"ethers/utils/bytes\";\n\ninterface HexDecoderState {\n    decodeTx: string;\n    decodedTx?: Transaction;\n}\n\nclass HexDecoder extends React.Component<{}, HexDecoderState> {\n    constructor(props) {\n        super(props);\n        this.state = {\n            decodeTx: \"\"\n        };\n    }\n\n    decodeTx = (e: React.ChangeEvent<HTMLInputElement>): void => {\n        let parsedTx = parse(e.target.value);\n        if (parsedTx) {\n            this.setState({\n                decodedTx\n            })\n        }\n        console.log(parsedTx)\n    }\n\n    render = () => (\n        <div>\n            <p>Enter String:</p>\n            <input type=\"text\" onChange={decodeTx} />\n            {this.state.decodedTx}\n        </div>\n    )\n}\n\nexport default HexDecoder;"]},"metadata":{},"sourceType":"module"}