{"ast":null,"code":"var _jsxFileName = \"/home/ilan/dev/cc-tools/pages/decode/hex/index.tsx\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport { parse } from \"ethers/utils/transaction\";\n\nclass HexDecoder extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"decodeTx\", e => {\n      let decodedTx = parse(e.target.value);\n\n      if (decodedTx) {\n        this.setState({\n          decodedTx\n        });\n      }\n\n      console.log(decodedTx);\n    });\n\n    _defineProperty(this, \"render\", () => __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"Enter String:\"), __jsx(\"input\", {\n      type: \"text\",\n      onChange: this.decodeTx,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }), __jsx(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      \"html-for\": \"decode-tx\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"Enter Raw Hex\"), __jsx(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      id: \"decode-tx\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    })), JSON.stringify(this.state.decodedTx)));\n\n    this.state = {\n      decodeTx: \"\"\n    };\n  }\n\n}\n\nexport default HexDecoder;","map":{"version":3,"sources":["/home/ilan/dev/cc-tools/pages/decode/hex/index.tsx"],"names":["React","parse","HexDecoder","Component","constructor","props","e","decodedTx","target","value","setState","console","log","decodeTx","JSON","stringify","state"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,KAAT,QAAmC,0BAAnC;;AAQA,MAAMC,UAAN,SAAyBF,KAAK,CAACG,SAA/B,CAA8D;AAC1DC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,sCAOPC,CAAD,IAAkD;AACzD,UAAIC,SAAS,GAAGN,KAAK,CAACK,CAAC,CAACE,MAAF,CAASC,KAAV,CAArB;;AACA,UAAIF,SAAJ,EAAe;AACX,aAAKG,QAAL,CAAc;AACVH,UAAAA;AADU,SAAd;AAGH;;AACDI,MAAAA,OAAO,CAACC,GAAR,CAAYL,SAAZ;AACH,KAfkB;;AAAA,oCAiBV,MACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,EAEI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,QAAQ,EAAE,KAAKM,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAII;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,kBAAS,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,EAEI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,SAAS,EAAC,cAA7B;AAA4C,MAAA,EAAE,EAAC,WAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAJJ,EAQKC,IAAI,CAACC,SAAL,CAAe,KAAKC,KAAL,CAAWT,SAA1B,CARL,CAlBe;;AAEf,SAAKS,KAAL,GAAa;AACTH,MAAAA,QAAQ,EAAE;AADD,KAAb;AAGH;;AANyD;;AAgC9D,eAAeX,UAAf","sourcesContent":["import React from \"react\";\n\nimport { parse, Transaction } from \"ethers/utils/transaction\";\nimport { hexDataLength } from \"ethers/utils/bytes\";\n\ninterface HexDecoderState {\n    decodeTx: string;\n    decodedTx?: Transaction;\n}\n\nclass HexDecoder extends React.Component<{}, HexDecoderState> {\n    constructor(props) {\n        super(props);\n        this.state = {\n            decodeTx: \"\"\n        };\n    }\n\n    decodeTx = (e: React.ChangeEvent<HTMLInputElement>): void => {\n        let decodedTx = parse(e.target.value);\n        if (decodedTx) {\n            this.setState({\n                decodedTx,\n            });\n        }\n        console.log(decodedTx)\n    }\n\n    render = () => (\n        <div>\n            <p>Enter String:</p>\n            <input type=\"text\" onChange={this.decodeTx} />\n\n            <div className=\"form-group\">\n                <label html-for=\"decode-tx\">Enter Raw Hex</label>\n                <input type=\"text\" className=\"form-control\" id=\"decode-tx\" />\n            </div>\n            {JSON.stringify(this.state.decodedTx)}\n        </div>\n    )\n}\n\nexport default HexDecoder;"]},"metadata":{},"sourceType":"module"}